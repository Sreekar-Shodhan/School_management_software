{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Configure axios defaults\naxios.defaults.withCredentials = true;\nexport const studentServices = {\n  // Get all students with pagination\n  async getStudents(page = 1, limit = 10) {\n    try {\n      const response = await axios.get(`${API_URL}/students`, {\n        params: {\n          page,\n          limit\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error fetching students:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch students'\n      };\n    }\n  },\n  // Get a single student by ID\n  async getStudentById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/students/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error fetching student:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch student'\n      };\n    }\n  },\n  // Create a new student\n  async createStudent(studentData) {\n    try {\n      const response = await axios.post(`${API_URL}/students`, studentData);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error creating student:', error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create student'\n      };\n    }\n  },\n  // Update a student\n  async updateStudent(studentData) {\n    try {\n      const response = await axios.put(`${API_URL}/students/${studentData.id}`, studentData);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error updating student:', error);\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update student'\n      };\n    }\n  },\n  // Delete a student\n  async deleteStudent(id) {\n    try {\n      const response = await axios.delete(`${API_URL}/students/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error deleting student:', error);\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to delete student'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","defaults","withCredentials","studentServices","getStudents","page","limit","response","get","params","data","error","_error$response","_error$response$data","console","success","message","getStudentById","id","_error$response2","_error$response2$data","createStudent","studentData","post","_error$response3","_error$response3$data","updateStudent","put","_error$response4","_error$response4$data","deleteStudent","delete","_error$response5","_error$response5$data"],"sources":["/home/sreekar/CascadeProjects/school-management-system/frontend/src/services/studentServices.ts"],"sourcesContent":["import axios from 'axios';\nimport { Student, StudentCreateInput, StudentUpdateInput, StudentResponse, StudentsListResponse } from '../types/student';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Configure axios defaults\naxios.defaults.withCredentials = true;\n\nexport const studentServices = {\n    // Get all students with pagination\n    async getStudents(page: number = 1, limit: number = 10): Promise<StudentsListResponse> {\n        try {\n            const response = await axios.get(`${API_URL}/students`, {\n                params: { page, limit }\n            });\n            return response.data;\n        } catch (error: any) {\n            console.error('Error fetching students:', error);\n            return {\n                success: false,\n                error: error.response?.data?.message || 'Failed to fetch students'\n            };\n        }\n    },\n\n    // Get a single student by ID\n    async getStudentById(id: number): Promise<StudentResponse> {\n        try {\n            const response = await axios.get(`${API_URL}/students/${id}`);\n            return response.data;\n        } catch (error: any) {\n            console.error('Error fetching student:', error);\n            return {\n                success: false,\n                error: error.response?.data?.message || 'Failed to fetch student'\n            };\n        }\n    },\n\n    // Create a new student\n    async createStudent(studentData: StudentCreateInput): Promise<StudentResponse> {\n        try {\n            const response = await axios.post(`${API_URL}/students`, studentData);\n            return response.data;\n        } catch (error: any) {\n            console.error('Error creating student:', error);\n            return {\n                success: false,\n                error: error.response?.data?.message || 'Failed to create student'\n            };\n        }\n    },\n\n    // Update a student\n    async updateStudent(studentData: StudentUpdateInput): Promise<StudentResponse> {\n        try {\n            const response = await axios.put(`${API_URL}/students/${studentData.id}`, studentData);\n            return response.data;\n        } catch (error: any) {\n            console.error('Error updating student:', error);\n            return {\n                success: false,\n                error: error.response?.data?.message || 'Failed to update student'\n            };\n        }\n    },\n\n    // Delete a student\n    async deleteStudent(id: number): Promise<StudentResponse> {\n        try {\n            const response = await axios.delete(`${API_URL}/students/${id}`);\n            return response.data;\n        } catch (error: any) {\n            console.error('Error deleting student:', error);\n            return {\n                success: false,\n                error: error.response?.data?.message || 'Failed to delete student'\n            };\n        }\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACAJ,KAAK,CAACK,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,OAAO,MAAMC,eAAe,GAAG;EAC3B;EACA,MAAMC,WAAWA,CAACC,IAAY,GAAG,CAAC,EAAEC,KAAa,GAAG,EAAE,EAAiC;IACnF,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,WAAW,EAAE;QACpDY,MAAM,EAAE;UAAEJ,IAAI;UAAEC;QAAM;MAC1B,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACjBC,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO;QACHI,OAAO,EAAE,KAAK;QACdJ,KAAK,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI;MAC5C,CAAC;IACL;EACJ,CAAC;EAED;EACA,MAAMC,cAAcA,CAACC,EAAU,EAA4B;IACvD,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,aAAaqB,EAAE,EAAE,CAAC;MAC7D,OAAOX,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAQ,gBAAA,EAAAC,qBAAA;MACjBN,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QACHI,OAAO,EAAE,KAAK;QACdJ,KAAK,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAACJ,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBT,IAAI,cAAAU,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI;MAC5C,CAAC;IACL;EACJ,CAAC;EAED;EACA,MAAMK,aAAaA,CAACC,WAA+B,EAA4B;IAC3E,IAAI;MACA,MAAMf,QAAQ,GAAG,MAAMX,KAAK,CAAC2B,IAAI,CAAC,GAAG1B,OAAO,WAAW,EAAEyB,WAAW,CAAC;MACrE,OAAOf,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAa,gBAAA,EAAAC,qBAAA;MACjBX,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QACHI,OAAO,EAAE,KAAK;QACdJ,KAAK,EAAE,EAAAa,gBAAA,GAAAb,KAAK,CAACJ,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBd,IAAI,cAAAe,qBAAA,uBAApBA,qBAAA,CAAsBT,OAAO,KAAI;MAC5C,CAAC;IACL;EACJ,CAAC;EAED;EACA,MAAMU,aAAaA,CAACJ,WAA+B,EAA4B;IAC3E,IAAI;MACA,MAAMf,QAAQ,GAAG,MAAMX,KAAK,CAAC+B,GAAG,CAAC,GAAG9B,OAAO,aAAayB,WAAW,CAACJ,EAAE,EAAE,EAAEI,WAAW,CAAC;MACtF,OAAOf,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAiB,gBAAA,EAAAC,qBAAA;MACjBf,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QACHI,OAAO,EAAE,KAAK;QACdJ,KAAK,EAAE,EAAAiB,gBAAA,GAAAjB,KAAK,CAACJ,QAAQ,cAAAqB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlB,IAAI,cAAAmB,qBAAA,uBAApBA,qBAAA,CAAsBb,OAAO,KAAI;MAC5C,CAAC;IACL;EACJ,CAAC;EAED;EACA,MAAMc,aAAaA,CAACZ,EAAU,EAA4B;IACtD,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAMX,KAAK,CAACmC,MAAM,CAAC,GAAGlC,OAAO,aAAaqB,EAAE,EAAE,CAAC;MAChE,OAAOX,QAAQ,CAACG,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAqB,gBAAA,EAAAC,qBAAA;MACjBnB,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QACHI,OAAO,EAAE,KAAK;QACdJ,KAAK,EAAE,EAAAqB,gBAAA,GAAArB,KAAK,CAACJ,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBtB,IAAI,cAAAuB,qBAAA,uBAApBA,qBAAA,CAAsBjB,OAAO,KAAI;MAC5C,CAAC;IACL;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}