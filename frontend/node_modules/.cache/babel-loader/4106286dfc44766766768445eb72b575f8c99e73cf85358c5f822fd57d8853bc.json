{"ast":null,"code":"var _jsxFileName = \"/home/sreekar/CascadeProjects/school-management-system/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize axios defaults\n  axios.defaults.baseURL = 'http://192.168.1.133:5000';\n  axios.defaults.withCredentials = true;\n  axios.defaults.headers.common['Accept'] = 'application/json';\n  axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n  // Add request interceptor for error handling\n  axios.interceptors.request.use(config => {\n    // Add CORS headers to all requests\n    config.headers['X-Requested-With'] = 'XMLHttpRequest';\n    return config;\n  }, error => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  });\n\n  // Add response interceptor for error handling\n  axios.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    console.error('Response error:', error);\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await axios.get('/auth/me');\n          setUser(response.data);\n        } catch (error) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const handleAxiosError = error => {\n    if (error.response) {\n      var _error$response$data, _error$response$data2;\n      // Server responded with an error\n      return ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.error) || 'Server error occurred';\n    } else if (error.request) {\n      // Request was made but no response\n      return 'Unable to connect to server. Please check if the server is running.';\n    } else {\n      // Error in request setup\n      return error.message || 'An error occurred';\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        access_token,\n        refresh_token,\n        user\n      } = response.data;\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      setUser(user);\n      setError(null);\n    } catch (error) {\n      const errorMessage = handleAxiosError(error);\n      setError(errorMessage);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n      setError(null);\n    }\n  };\n  const register = async userData => {\n    try {\n      await axios.post('/auth/register', userData);\n      setError(null);\n    } catch (error) {\n      const errorMessage = handleAxiosError(error);\n      setError(errorMessage);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","defaults","baseURL","withCredentials","headers","common","post","interceptors","request","use","config","console","Promise","reject","response","initializeAuth","token","localStorage","getItem","get","data","removeItem","handleAxiosError","_error$response$data","_error$response$data2","message","login","email","password","access_token","refresh_token","setItem","errorMessage","logout","register","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sreekar/CascadeProjects/school-management-system/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  register: (userData: {\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n  }) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Initialize axios defaults\n  axios.defaults.baseURL = 'http://192.168.1.133:5000';\n  axios.defaults.withCredentials = true;\n  axios.defaults.headers.common['Accept'] = 'application/json';\n  axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n  // Add request interceptor for error handling\n  axios.interceptors.request.use(\n    (config) => {\n      // Add CORS headers to all requests\n      config.headers['X-Requested-With'] = 'XMLHttpRequest';\n      return config;\n    },\n    (error) => {\n      console.error('Request error:', error);\n      return Promise.reject(error);\n    }\n  );\n\n  // Add response interceptor for error handling\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      console.error('Response error:', error);\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await axios.get('/auth/me');\n          setUser(response.data);\n        } catch (error) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const handleAxiosError = (error: any): string => {\n    if (error.response) {\n      // Server responded with an error\n      return error.response.data?.message || error.response.data?.error || 'Server error occurred';\n    } else if (error.request) {\n      // Request was made but no response\n      return 'Unable to connect to server. Please check if the server is running.';\n    } else {\n      // Error in request setup\n      return error.message || 'An error occurred';\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', { email, password });\n      const { access_token, refresh_token, user } = response.data;\n      \n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      setUser(user);\n      setError(null);\n    } catch (error: any) {\n      const errorMessage = handleAxiosError(error);\n      setError(errorMessage);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n      setError(null);\n    }\n  };\n\n  const register = async (userData: {\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n  }) => {\n    try {\n      await axios.post('/auth/register', userData);\n      setError(null);\n    } catch (error: any) {\n      const errorMessage = handleAxiosError(error);\n      setError(errorMessage);\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        error,\n        login,\n        logout,\n        register,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAyB1B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACAE,KAAK,CAACkB,QAAQ,CAACC,OAAO,GAAG,2BAA2B;EACpDnB,KAAK,CAACkB,QAAQ,CAACE,eAAe,GAAG,IAAI;EACrCpB,KAAK,CAACkB,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,QAAQ,CAAC,GAAG,kBAAkB;EAC5DtB,KAAK,CAACkB,QAAQ,CAACG,OAAO,CAACE,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;;EAEhE;EACAvB,KAAK,CAACwB,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;IACV;IACAA,MAAM,CAACN,OAAO,CAAC,kBAAkB,CAAC,GAAG,gBAAgB;IACrD,OAAOM,MAAM;EACf,CAAC,EACAX,KAAK,IAAK;IACTY,OAAO,CAACZ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAOa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;EAC9B,CACF,CAAC;;EAED;EACAhB,KAAK,CAACwB,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC5BK,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACAf,KAAK,IAAK;IACTY,OAAO,CAACZ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,OAAOa,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;EAC9B,CACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMiC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAIF,KAAK,EAAE;QACT,IAAI;UACFjC,KAAK,CAACkB,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUW,KAAK,EAAE;UAClE,MAAMF,QAAQ,GAAG,MAAM/B,KAAK,CAACoC,GAAG,CAAC,UAAU,CAAC;UAC5CvB,OAAO,CAACkB,QAAQ,CAACM,IAAI,CAAC;QACxB,CAAC,CAAC,OAAOrB,KAAK,EAAE;UACdkB,YAAY,CAACI,UAAU,CAAC,cAAc,CAAC;UACvCJ,YAAY,CAACI,UAAU,CAAC,eAAe,CAAC;UACxC,OAAOtC,KAAK,CAACkB,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;QACvD;MACF;MACAP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAIvB,KAAU,IAAa;IAC/C,IAAIA,KAAK,CAACe,QAAQ,EAAE;MAAA,IAAAS,oBAAA,EAAAC,qBAAA;MAClB;MACA,OAAO,EAAAD,oBAAA,GAAAxB,KAAK,CAACe,QAAQ,CAACM,IAAI,cAAAG,oBAAA,uBAAnBA,oBAAA,CAAqBE,OAAO,OAAAD,qBAAA,GAAIzB,KAAK,CAACe,QAAQ,CAACM,IAAI,cAAAI,qBAAA,uBAAnBA,qBAAA,CAAqBzB,KAAK,KAAI,uBAAuB;IAC9F,CAAC,MAAM,IAAIA,KAAK,CAACS,OAAO,EAAE;MACxB;MACA,OAAO,qEAAqE;IAC9E,CAAC,MAAM;MACL;MACA,OAAOT,KAAK,CAAC0B,OAAO,IAAI,mBAAmB;IAC7C;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAM/B,KAAK,CAACuB,IAAI,CAAC,aAAa,EAAE;QAAEqB,KAAK;QAAEC;MAAS,CAAC,CAAC;MACrE,MAAM;QAAEC,YAAY;QAAEC,aAAa;QAAEnC;MAAK,CAAC,GAAGmB,QAAQ,CAACM,IAAI;MAE3DH,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC;MAClDZ,YAAY,CAACc,OAAO,CAAC,eAAe,EAAED,aAAa,CAAC;MACpD/C,KAAK,CAACkB,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUwB,YAAY,EAAE;MAEzEjC,OAAO,CAACD,IAAI,CAAC;MACbK,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOD,KAAU,EAAE;MACnB,MAAMiC,YAAY,GAAGV,gBAAgB,CAACvB,KAAK,CAAC;MAC5CC,QAAQ,CAACgC,YAAY,CAAC;MACtB,MAAMjC,KAAK;IACb;EACF,CAAC;EAED,MAAMkC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMlD,KAAK,CAACuB,IAAI,CAAC,cAAc,CAAC;IAClC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRkB,YAAY,CAACI,UAAU,CAAC,cAAc,CAAC;MACvCJ,YAAY,CAACI,UAAU,CAAC,eAAe,CAAC;MACxC,OAAOtC,KAAK,CAACkB,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACrDT,OAAO,CAAC,IAAI,CAAC;MACbI,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,MAAMkC,QAAQ,GAAG,MAAOC,QAMvB,IAAK;IACJ,IAAI;MACF,MAAMpD,KAAK,CAACuB,IAAI,CAAC,gBAAgB,EAAE6B,QAAQ,CAAC;MAC5CnC,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOD,KAAU,EAAE;MACnB,MAAMiC,YAAY,GAAGV,gBAAgB,CAACvB,KAAK,CAAC;MAC5CC,QAAQ,CAACgC,YAAY,CAAC;MACtB,MAAMjC,KAAK;IACb;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACkD,QAAQ;IACnBC,KAAK,EAAE;MACL1C,IAAI;MACJE,OAAO;MACPE,KAAK;MACL2B,KAAK;MACLO,MAAM;MACNC;IACF,CAAE;IAAAzC,QAAA,EAEDA;EAAQ;IAAA6C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/C,GAAA,CAnIWF,YAAqD;AAAAkD,EAAA,GAArDlD,YAAqD;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}